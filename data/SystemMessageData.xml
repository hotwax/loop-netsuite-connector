<?xml version="1.0" encoding="UTF-8"?>
<entity-facade-xml type="seed">

 <moqui.service.message.SystemMessageType systemMessageTypeId="LoopWebhook" parentTypeId="" description="ParentSystemMessageType for Loop Webhook."/>
 <moqui.service.message.SystemMessageType systemMessageTypeId="NetsuiteCredentials" description="NetSuite Credentials"/>

 <!-- Parent SystemMessageType record for incoming and outgoing local feed file system message types -->
 <moqui.service.message.SystemMessageType systemMessageTypeId="LocalFeedFile" description="Local Feed File"/>

 <!-- SystemMessageType record for loop return.created webhook -->
 <moqui.service.message.SystemMessageType systemMessageTypeId="LoopReturnsCreate"
         description="Loop Returns Create Webhook"
         parentTypeId="LoopWebhook"
         sendServiceName="co.hotwax.loop.webhook.LoopWebhookServices.send#WebhookSubscriptionSystemMessage">
  <parameters parameterName="topic" parameterValue="return" systemMessageRemoteId=""/>
  <parameters parameterName="trigger" parameterValue="return.created" systemMessageRemoteId=""/>
  <parameters parameterName="status" parameterValue="active" systemMessageRemoteId=""/>
 </moqui.service.message.SystemMessageType>

 <!-- EnumerationType for Loop system message type enum and relationship -->
 <moqui.basic.EnumerationType description="Loop System Message Type Enum" enumTypeId="LoopMessageTypeEnum"/>

 <!-- Enumeration for mapping LoopReturnsCreate SystemMessageType to return.created loop webhook trigger -->
 <moqui.basic.Enumeration description="Loop Create Return Webhook" enumId="LoopReturnsCreate"
         enumTypeId="LoopMessageTypeEnum" enumCode="return.created"/>

 <moqui.service.message.SystemMessageType systemMessageTypeId="return.created"
         description="Send Create Return JSON file to NetSuite"
         parentTypeId="LocalFeedFile"
         receivePath="${contentRoot}/Netsuite/LoopReturns/${partyId}/${accountType}/create/loopCreateReturnFeed-${dateTime}.json"
         sendPath=""
         sendServiceName="co.hotwax.netsuite.NetSuiteRestServices.send#SystemMessageFileNetSuite">
  <parameters parameterName="scriptType" parameterValue="netsuite.restlet.create.return" systemMessageRemoteId=""/>
 </moqui.service.message.SystemMessageType>

 <!-- SystemMessageType record for loop label.created webhook -->
 <moqui.service.message.SystemMessageType systemMessageTypeId="LoopLabelCreate"
         description="Loop Label Create Webhook"
         parentTypeId="LoopWebhook"
         sendServiceName="co.hotwax.loop.webhook.LoopWebhookServices.send#WebhookSubscriptionSystemMessage">
  <parameters parameterName="topic" parameterValue="label" systemMessageRemoteId=""/>
  <parameters parameterName="trigger" parameterValue="label.created" systemMessageRemoteId=""/>
  <parameters parameterName="status" parameterValue="active" systemMessageRemoteId=""/>
 </moqui.service.message.SystemMessageType>

 <moqui.basic.Enumeration description="Loop Create Label Webhook" enumId="LoopLabelCreate"
         enumTypeId="LoopMessageTypeEnum" enumCode="label.created"/>

 <!-- SystemMessageType record to put loop label.created webhook payload on SFTP server -->
 <moqui.service.message.SystemMessageType systemMessageTypeId="label.created"
         description="Send Update Return JSON file to NetSuite"
         parentTypeId="LocalFeedFile"
         receivePath="${contentRoot}/Netsuite/LoopReturns/${partyId}/${accountType}/update/loopUpdateReturnFeed-${dateTime}.json"
         sendPath=""
         sendServiceName="co.hotwax.netsuite.NetSuiteRestServices.send#SystemMessageFileNetSuite">
 <parameters parameterName="scriptType" parameterValue="netsuite.restlet.update.return" systemMessageRemoteId=""/>
 </moqui.service.message.SystemMessageType>

 <!-- SystemMessageType record for loop return.closed webhook -->
 <moqui.service.message.SystemMessageType systemMessageTypeId="LoopReturnsClose"
         description="Loop Returns Close Webhook"
         parentTypeId="LoopWebhook"
         sendServiceName="co.hotwax.loop.webhook.LoopWebhookServices.send#WebhookSubscriptionSystemMessage">
  <parameters parameterName="topic" parameterValue="return" systemMessageRemoteId=""/>
  <parameters parameterName="trigger" parameterValue="return.closed" systemMessageRemoteId=""/>
  <parameters parameterName="status" parameterValue="active" systemMessageRemoteId=""/>
 </moqui.service.message.SystemMessageType>

 <moqui.basic.Enumeration description="Loop Close Return Webhook" enumId="LoopReturnsClose"
         enumTypeId="LoopMessageTypeEnum" enumCode="return.closed"/>

 <!-- SystemMessageType record to put loop return.closed webhook payload on SFTP server -->
 <moqui.service.message.SystemMessageType systemMessageTypeId="return.closed"
         description="Send Close Return JSON file to NetSuite"
         parentTypeId="LocalFeedFile"
         receivePath="${contentRoot}/Netsuite/LoopReturns/${partyId}/${accountType}/close/loopCloseReturnFeed-${dateTime}.json"
         sendPath=""
         sendServiceName="co.hotwax.netsuite.NetSuiteRestServices.send#SystemMessageFileNetSuite">
 <parameters parameterName="scriptType" parameterValue="netsuite.restlet.create.refund" systemMessageRemoteId=""/>
 </moqui.service.message.SystemMessageType>

 <!--Enum data for M2M setup algorithm types -->
 <moqui.basic.Enumeration enumId="ES256" description="ES 256" enumTypeId="SystemMessageAuthType"/>
 <moqui.basic.Enumeration enumId="PS256" description="RSA-PSS" enumTypeId="SystemMessageAuthType"/>
 <moqui.basic.Enumeration enumId="ES512" description="ES 512" enumTypeId="SystemMessageAuthType"/>

 <!-- SystemMessageType data to call loop process return API
 <moqui.service.message.SystemMessageType systemMessageTypeId="ProcessLoopReturn"
         description="Fetch loop return CSV file from SFTP server and call process loop return API."
         parentTypeId="LocalFeedFile"
         receiveResponseEnumId="MsgRrMove"
         sendPath="${contentRoot}/Netsuite/LoopReturns/${partyId}/ProcessLoopReturn"
         receivePath="/home/${sftpUsername}/netsuite/moqui-loop-return/process-return/"
         receiveMovePath="/home/${sftpUsername}/netsuite/moqui-loop-return/process-return/archive"
         consumeServiceName="co.hotwax.loop.common.LoopReturnServices.consume#LoopReturnProcessedFeed">
 </moqui.service.message.SystemMessageType>-->

 <moqui.service.job.ServiceJob jobName="send_AllProducedSystemMessages_frequent" description="Send All Produced SystemMessages"
                               serviceName="org.moqui.impl.SystemMessageServices.send#AllProducedSystemMessages" cronExpression="0 0 0 * * ?" paused="N">
   <parameters parameterName="retryLimit" parameterValue="3"/>
   <parameters parameterName="retryMinutes" parameterValue="60"/>
 </moqui.service.job.ServiceJob>
</entity-facade-xml>
